@model AdminBlogPostModel
@using DPTS.Web.Models;
@using DPTS.Web.Helpers
@using System.Text;
@Html.ValidationSummary(true)
@Html.HiddenFor(model => model.Id)
@{ 
    // IBlogService _blogService;
}

<script>
    //$(document).ready(function() {
    //    bindBootstrapTabSelectEvent('blog-post-edit');
    //});
</script>

@{
//resources for product tags input
//Html.AppendCssFileParts("~/Administration/Content/tagEditor/jquery.tag-editor.css");
//Html.AppendScriptParts("~/Administration/Scripts/tagEditor/jquery.tag-editor.min.js");
//Html.AppendScriptParts("~/Administration/Scripts/tagEditor/jquery.caret.min.js");

//Html.Assets().Styles.Add("/Content/tagEditor/jquery.tag-editor.css");
//Html.Assets().Scripts.Add("/Scripts/tagEditor/jquery.tag-editor.min.js");
//Html.Assets().Scripts.Add("/Scripts/tagEditor/jquery.caret.min.js");
}


    @*<script type="text/javascript">
        @{
            //TODO move to Model
            var blogTags = _blogService.GetAllBlogPostTags(true);
            var blogTagsSb = new StringBuilder();
            blogTagsSb.Append("var initialBlogTags = [");
            for (int i = 0; i < blogTags.Count; i++)
            {
                var tag = blogTags[i];
                blogTagsSb.Append("'");
                blogTagsSb.Append(HttpUtility.JavaScriptStringEncode(tag.Name));
                blogTagsSb.Append("'");
                if (i != blogTags.Count - 1)
                {
                    blogTagsSb.Append(",");
                }
            }
            blogTagsSb.Append("]");
        }
        //tags
        $(document).ready(function() {
            @Html.Raw(blogTagsSb.ToString())
            $("#Tags").tagEditor({
                autocomplete: {
                    delay: 0,
                    position: { collision: 'flip' },
                    source: initialBlogTags
                },
                delimiter: ',',
                placeholder: 'Placeholder'
            });
        });
    </script>*@

    <div class="panel-group">
        <div class="panel panel-default">
            <div class="panel-body">
              
                <div class="form-group">
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.Title)
                    </div>
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.Title)
                        @Html.ValidationMessageFor(model => model.Title)
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.Body)
                    </div>
                    <div class="col-md-9">
                        <div class="input-group input-group-required">
                            @Html.EditorFor(x => x.Body, "RichEditor")
                            <div class="input-group-btn">
                             hint*
                            </div>
                        </div>
                        @Html.ValidationMessageFor(model => model.Body)
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.BodyOverview)
                    </div>
                    <div class="col-md-9">
                        @Html.TextAreaFor(model => model.BodyOverview)
                        @Html.ValidationMessageFor(model => model.BodyOverview)
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.Tags)
                    </div>
                    <div class="col-md-9">
                       @Html.EditorFor(model => model.Tags)
                       @Html.ValidationMessageFor(model => model.Tags)
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.AllowComments)
                    </div>
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.AllowComments)
                        @Html.ValidationMessageFor(model => model.AllowComments)
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.StartDate)
                    </div>
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.StartDate)
                        @Html.ValidationMessageFor(model => model.StartDate)
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.EndDate)
                    </div>
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.EndDate)
                        @Html.ValidationMessageFor(model => model.EndDate)
                    </div>
                </div>
                
            </div>
        </div>
    </div>
